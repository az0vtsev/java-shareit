CREATE TABLE IF NOT EXISTS users (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL,
    CONSTRAINT pk_user PRIMARY KEY (id),
    CONSTRAINT uq_user_email UNIQUE (email)
    );

CREATE TABLE IF NOT EXISTS requests (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    description VARCHAR(255) NOT NULL,
    requestor_id INTEGER NOT NUll,
    created TIMESTAMP NOT NULL,
    CONSTRAINT pk_request PRIMARY KEY (id),
    CONSTRAINT request_user_fk FOREIGN KEY (requestor_id)
    REFERENCES users (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS items (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    owner_id INTEGER NOT NULL,
    name VARCHAR(255) NOT NULL,
    description VARCHAR(255) NOT NULL,
    available BOOLEAN NOT NULL,
    request_id INTEGER,
    CONSTRAINT pk_item PRIMARY KEY (id),
    CONSTRAINT item_user_fk FOREIGN KEY (owner_id)
    REFERENCES users (id) ON DELETE CASCADE,
    CONSTRAINT item_request_fk FOREIGN KEY (request_id)
    REFERENCES requests (id) ON DELETE CASCADE
    );


--DROP TYPE IF EXISTS BOOKINGSTATUS CASCADE;
--CREATE TYPE BOOKINGSTATUS AS ENUM ('waiting', 'approved', 'rejected', 'canceled');

CREATE TABLE IF NOT EXISTS bookings (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    start_date TIMESTAMP NOT NULL,
    end_date TIMESTAMP NOT NULL,
    item_id INTEGER NOT NULL,
    booker_id INTEGER NOT NULL,
    status VARCHAR(255) NOT NULL,
    CONSTRAINT pk_booking PRIMARY KEY (id),
    CONSTRAINT booking_item_fk FOREIGN KEY (item_id)
    REFERENCES items (id) ON DELETE CASCADE,
    CONSTRAINT booking_user_fk FOREIGN KEY (booker_id)
    REFERENCES users (id) ON DELETE CASCADE
    );

CREATE TABLE IF NOT EXISTS comments (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    text VARCHAR(255) NOT NULL,
    item_id INTEGER NOT NUll,
    author_id INTEGER NOT NUll,
    created TIMESTAMP NOT NULL,
    CONSTRAINT pk_comment PRIMARY KEY (id),
    CONSTRAINT comment_item_fk FOREIGN KEY (item_id)
    REFERENCES items (id) ON DELETE CASCADE,
    CONSTRAINT comment_user_fk FOREIGN KEY (author_id)
    REFERENCES users (id) ON DELETE CASCADE
);